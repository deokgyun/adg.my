name: CI/CD for Spring Boot with Docker and OCI

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Get short SHA
      id: vars
      run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build Docker image with GIT_SHA tag
      run: docker build -t yny.ocir.io/ax0ijnvub7pp/adg:${{ env.GIT_SHA }} -t yny.ocir.io/ax0ijnvub7pp/adg:latest .

    - name: Login to Oracle Container Registry
      run: echo ${{ secrets.OCI_REGISTRY_PASSWORD }} | docker login yny.ocir.io -u ${{ secrets.OCI_REGISTRY_USERNAME }} --password-stdin

    - name: Push Docker image with GIT_SHA tag
      run: docker push yny.ocir.io/ax0ijnvub7pp/adg:${{ env.GIT_SHA }}

    - name: Push Docker image with latest tag
      run: docker push yny.ocir.io/ax0ijnvub7pp/adg:latest

    - name: Deploy to Server
      uses: appleboy/scp-action@v0.1.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "docker-compose.yml"
        target: "~/app/"

    - name: Run Docker container on Server with GIT_SHA tag
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo ${{ secrets.OCI_REGISTRY_PASSWORD }} | docker login yny.ocir.io -u ${{ secrets.OCI_REGISTRY_USERNAME }} --password-stdin
          sudo docker pull yny.ocir.io/ax0ijnvub7pp/adg:latest
          sudo docker run -d --name your-container-name -p 8080:8080 yny.ocir.io/ax0ijnvub7pp/adg:latest --spring.profiles.active=dev
