name: CI/CD for Spring Boot with Docker and OCI

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' 
        java-version: '21'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: docker build -t yny.ocir.io/ax0ijnvub7pp/adg:latest .

    - name: Login to Oracle Container Registry
      run: echo ${{ secrets.OCI_REGISTRY_PASSWORD }} | docker login yny.ocir.io -u ${{ secrets.OCI_REGISTRY_USERNAME }} --password-stdin

    - name: Push Docker image to Oracle Container Registry
      run: docker push yny.ocir.io/your-namespace/your-docker-image-name:latest

    - name: Deploy to Server 1
      uses: appleboy/scp-action@v0.1.0
      with:
        host: ${{ secrets.SERVER1_HOST }}
        username: ${{ secrets.SERVER1_USER }}
        key: ${{ secrets.SERVER1_SSH_KEY }}
        source: "docker-compose.yml"
        target: "~/app/"

    - name: Run Docker container on Server 1
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER1_HOST }}
        username: ${{ secrets.SERVER1_USER }}
        key: ${{ secrets.SERVER1_SSH_KEY }}
        script: |
          docker-compose -f ~/app/docker-compose.yml up -d

    - name: Deploy to Server 2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER2_HOST }}
        username: ${{ secrets.SERVER2_USER }}
        key: ${{ secrets.SERVER2_SSH_KEY }}
        script: |
          docker login yny.ocir.io -u ${{ secrets.OCI_REGISTRY_USERNAME }} -p ${{ secrets.OCI_REGISTRY_PASSWORD }}
          docker pull yny.ocir.io/your-namespace/your-docker-image-name:latest
          docker run -d --name your-container-name -p 8080:8080 yny.ocir.io/your-namespace/your-docker-image-name:latest
